services:
  atlas:
    image: arigaio/atlas:latest-alpine
    container_name: atlas
    working_dir: /workspace/db
    environment:
      DATABASE_URL: postgres://app:app@db:5432/appdb?sslmode=disable
      ATLAS_DEV_URL: postgres://app:app@db:5432/atlas_dev?sslmode=disable
    volumes:
      - ./db:/workspace/db
    networks: [backend]
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: pg
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      TZ: Europe/Paris
    command:
      [
        "postgres",
        "-c",
        "shared_buffers=1GB",
        "-c",
        "effective_cache_size=3GB",
        "-c",
        "work_mem=16MB",
        "-c",
        "maintenance_work_mem=256MB",
        "-c",
        "default_statistics_target=200",
        "-c",
        "wal_compression=on",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "checkpoint_timeout=15min",
        "-c",
        "checkpoint_completion_target=0.9",
        "-c",
        "random_page_cost=1.1",
        "-c",
        "effective_io_concurrency=200",
        "-c",
        "shared_preload_libraries=pg_stat_statements",
        "-c",
        "track_io_timing=on",
      ]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 10
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      backend:
        aliases: [db]
    restart: unless-stopped
  pgbouncer:
    image: bitnami/pgbouncer:latest
    container_name: pgbouncer
    environment:
      POSTGRESQL_HOST: db
      POSTGRESQL_PORT_NUMBER: "5432"
      POSTGRESQL_USERNAME: app
      POSTGRESQL_PASSWORD: app
      PGBOUNCER_AUTH_TYPE: "scram-sha-256"
      PGBOUNCER_POOL_MODE: "transaction"
      PGBOUNCER_MAX_CLIENT_CONN: "1000"
      PGBOUNCER_DEFAULT_POOL_SIZE: "50"
      PGBOUNCER_PORT: "6432"
    ports:
      - "6432:6432"
    depends_on:
      - postgres
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks: [backend]
    restart: unless-stopped

  pgweb:
    image: sosedoff/pgweb:latest
    container_name: pgweb
    environment:
      DATABASE_URL: postgres://app:app@pgbouncer:6432/appdb?sslmode=disable
    ports:
      - "8081:8081"
    depends_on:
      - pgbouncer
    networks: [backend]
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks: [backend]
    restart: unless-stopped

networks:
  backend:

volumes:
  pgdata:
  redisdata:
